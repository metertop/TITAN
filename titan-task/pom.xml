<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.yunji</groupId>
		<artifactId>titan</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>
	<groupId>com.yunji</groupId>
	<artifactId>titan-task</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<name>titan-task</name>
	<url>http://maven.apache.org</url>
	<properties>
		<java-version>1.8</java-version>
		<druid-version>1.0.15</druid-version>
		<mysql-version>5.1.39</mysql-version>
		<dubbo-version>2.5.3</dubbo-version>
		<titan-version>2.0.0-SNAPSHOT</titan-version>
		<junit-version>4.8.2</junit-version>
		<poi-version>3.15</poi-version>
		<javassist-version>3.20.0-GA</javassist-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<build>
	<!--	<finalName>titan-task</finalName>-->
		<!--<resources>
			&lt;!&ndash; 控制资源文件的拷贝 &ndash;&gt;
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}</targetPath>
			</resource>
		</resources>-->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<compilerArguments>
						<verbose />
						<bootclasspath>${env.JAVA_HOME}/jre/lib/rt.jar</bootclasspath>
						<extdirs>${project.basedir}/lib</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>
			<!-- The configuration of maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Configuration of the archiver -->
					<archive>

						<!--
                            生成的jar中，不要包含pom.xml和pom.properties这两个文件
                        -->
						<addMavenDescriptor>false</addMavenDescriptor>

						<!-- Manifest specific configuration -->
						<manifest>
							<!--
                                是否要把第三方jar放到manifest的classpath中
                            -->
							<addClasspath>true</addClasspath>
							<!--
                               生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/
                           -->
							<classpathPrefix>lib/</classpathPrefix>
							<!--
                                应用的main class
                            -->
							<mainClass>com.yunji.titan.task.Main</mainClass>
						</manifest>
						<!-- 不设置使用classpath:xxx  报错-->
						<manifestEntries>
							<Class-Path>./</Class-Path>
						</manifestEntries>
					</archive>
					<!--
                        过滤掉不希望包含在jar中的文件
                    -->
					<excludes>
						<exclude>*.sh</exclude>
						<exclude>*.xml</exclude>
						<exclude>properties/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- The configuration of maven-assembly-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- not append assembly id in release file name -->
					<appendAssemblyId>false</appendAssemblyId>
					<!-- Specifies the configuration file of the assembly plugin -->
					<descriptors>
						<descriptor>src/main/resources/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${poi-version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid-version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>${javassist-version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.yunji</groupId>
			<artifactId>titan-utils</artifactId>
			<version>${titan-version}</version>
		</dependency>
		<dependency>
			<groupId>com.yunji</groupId>
			<artifactId>titan-agent</artifactId>
			<version>${titan-version}</version>
		</dependency>
	</dependencies>
</project>
